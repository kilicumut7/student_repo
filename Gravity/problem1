Here's a detailed structured solution outline and example content for **Problem 1: Orbital Period and Orbital Radius (Kepler’s Third Law)**, including derivations, explanations, Python simulation ideas, and suggestions for visualization and analysis.

---

# Problem 1: Orbital Period and Orbital Radius

---

## Motivation

Kepler's Third Law states a fundamental connection between the orbital period $T$ and the orbital radius $r$ for objects orbiting under gravity, especially for planets around stars or satellites around planets. It reveals that:

$$
T^2 \propto r^3
$$

This law allows astronomers to infer properties such as masses and distances in planetary systems and satellite dynamics.

---

## 1. Derivation of the Relationship for Circular Orbits

Consider a small mass $m$ orbiting a much larger mass $M$ (e.g., Earth) in a circular orbit of radius $r$.

**Gravitational force provides centripetal force:**

$$
F_{\text{gravity}} = \frac{GMm}{r^2}
$$

$$
F_{\text{centripetal}} = \frac{mv^2}{r}
$$

Equate the two:

$$
\frac{GMm}{r^2} = \frac{mv^2}{r} \implies v^2 = \frac{GM}{r}
$$

Orbital speed $v$ relates to orbital period $T$:

$$
v = \frac{2\pi r}{T}
$$

Substitute:

$$
\left(\frac{2\pi r}{T}\right)^2 = \frac{GM}{r} \implies \frac{4\pi^2 r^2}{T^2} = \frac{GM}{r}
$$

Rearranged:

$$
T^2 = \frac{4\pi^2}{GM} r^3
$$

---

## 2. Implications for Astronomy

* The constant $\frac{4\pi^2}{GM}$ depends on the central body’s mass $M$.
* By measuring $T$ and $r$, astronomers can infer $M$ (e.g., mass of the Sun, Earth).
* Applies to satellites, planets, moons, and exoplanets.
* Allows indirect mass and distance measurements in systems where direct measurement is difficult.

---

## 3. Real-World Examples

* **Moon around Earth:**

  * $r \approx 3.84 \times 10^8 \, m$
  * $T \approx 27.3 \, \text{days} = 2.36 \times 10^6 \, s$
* **Earth around Sun:**

  * $r \approx 1.496 \times 10^{11} \, m$
  * $T = 1 \, \text{year} = 3.15 \times 10^7 \, s$

Using the formula, these satisfy:

$$
\frac{T^2}{r^3} \approx \text{constant}
$$

---

## 4. Computational Model and Simulation

We can simulate circular orbits by numerically solving Newton’s law of gravitation and plotting $T^2$ vs $r^3$ to verify the linear relationship.

### Python Simulation Sketch:

* Define $G$, $M$
* Choose several radii $r_i$
* Calculate orbital period $T_i = 2\pi \sqrt{\frac{r_i^3}{GM}}$
* Plot $T_i^2$ vs $r_i^3$ and verify linearity

Optionally:

* Use numerical integration (e.g., Runge-Kutta) to simulate orbit and measure $T$ from trajectory
* Visualize orbits in 2D plots

---

## 5. Extension to Elliptical Orbits

* Kepler’s Third Law generalizes with $r^3$ replaced by $a^3$, where $a$ is the semi-major axis of the ellipse.
* Orbital period depends only on $a$, not eccentricity.
* This explains the motion of all planets, even non-circular orbits.

---

## Deliverables Summary

* Markdown document explaining theory and results.
* Python notebook/script:

  * Calculation and plotting of $T^2$ vs $r^3$.
  * Visualization of circular orbits.
* Discussion on applications and elliptical orbit generalization.

---

## Example Python Code Snippet

```python
import numpy as np
import matplotlib.pyplot as plt

# Constants
G = 6.67430e-11  # m^3 kg^-1 s^-2
M = 5.972e24     # mass of Earth in kg

# Define orbital radii (meters)
radii = np.linspace(1e7, 4.2e7, 50)  # from 10,000 km to 42,000 km

# Calculate orbital periods (seconds)
T = 2 * np.pi * np.sqrt(radii**3 / (G * M))

# Plot T^2 vs r^3 to verify linearity
plt.figure(figsize=(8,6))
plt.plot(radii**3, T**2, 'o-', label='T² vs r³')
plt.xlabel(r'$r^3 \ (m^3)$')
plt.ylabel(r'$T^2 \ (s^2)$')
plt.title("Verification of Kepler's Third Law for Circular Orbits")
plt.grid(True)
plt.legend()
plt.show()
```

---

If you'd like, I can also help prepare a full Markdown report with detailed explanations and simulation outputs, or assist with numerical orbit integration and animation. Would you like to proceed with that?
